apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: "io.gitlab.arturbosch.detekt"

apply plugin: 'io.fabric'

apply plugin: 'kotlin-kapt'

//apply plugin: 'checkstyle'

detekt {
    config = files("detekt.yml")
    filters = ".*/resources/.*,.*/build/.*,.*/CircularImageView.kt"
}

android {
    signingConfigs {
        config {
            keyAlias 'myalias'
            keyPassword 'evg20000311'
            storePassword 'evg20000311'
            storeFile file('../keystore/android.jks')
        }
    }
    compileSdkVersion 28
    defaultConfig {
        applicationId "org.evgem.android.drachukeugenesapp"
        minSdkVersion 16
        targetSdkVersion 28
        versionCode 2
        versionName "2.0.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
        }
    }
}

repositories {
    jcenter()
    mavenCentral()
    maven { url 'https://maven.fabric.io/public' }
}

configurations {
    ktlint
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'com.android.support:support-v4:28.0.0'
    ktlint "com.github.shyiko:ktlint:0.29.0"
    implementation('com.crashlytics.sdk.android:crashlytics:2.9.8@aar') {
        transitive = true
    }
    def appCenterSdkVersion = '1.11.2'
    implementation "com.microsoft.appcenter:appcenter-analytics:${appCenterSdkVersion}"
    implementation "com.microsoft.appcenter:appcenter-crashes:${appCenterSdkVersion}"
    implementation 'com.android.support:recyclerview-v7:28.0.0'
    implementation 'com.android.support:design:28.0.0'
    implementation 'com.android.support:preference-v7:28.0.0'

    def room_version = "1.1.1"
    implementation "android.arch.persistence.room:runtime:$room_version"
    kapt "android.arch.persistence.room:compiler:$room_version"

    implementation 'de.hdodenhof:circleimageview:3.0.0'
    implementation 'com.yandex.android:mobmetricalib:3.5.3'

}

// ktlint
// kotlin-gradle-plugin must be applied for configuration below to work
// (see https://kotlinlang.org/docs/reference/using-gradle.html)

//configurations {
//    ktlint
//}

//dependencies {
//    ktlint "com.github.shyiko:ktlint:0.29.0"
//    // additional 3rd party ruleset(s) can be specified here
//    // just add them to the classpath (e.g. ktlint 'groupId:artifactId:version') and
//    // ktlint will pick them up
//}

task ktlint(type: JavaExec, group: "verification") {
    description = "Check Kotlin code style."
    classpath = configurations.ktlint
    main = "com.github.shyiko.ktlint.Main"
    args "src/**/*.kt", "--reporter=plain", "--reporter=checkstyle,output=${buildDir}/reports/ktlint.xml"
    // to generate report in checkstyle format prepend following args:
    // "--reporter=plain", "--reporter=checkstyle,output=${buildDir}/ktlint.xml"
    // see https://github.com/shyiko/ktlint#usage for more
}
//check.dependsOn ktlint

task ktlintFormat(type: JavaExec, group: "formatting") {
    description = "Fix Kotlin code style deviations."
    classpath = configurations.ktlint
    main = "com.github.shyiko.ktlint.Main"
    args "-F", "src/**/*.kt"
}
