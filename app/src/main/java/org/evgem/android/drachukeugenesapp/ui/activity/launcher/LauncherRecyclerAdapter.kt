package org.evgem.android.drachukeugenesapp.ui.activity.launcher

import android.support.v7.widget.RecyclerView
import android.view.LayoutInflater
import android.view.ViewGroup
import org.evgem.android.drachukeugenesapp.R
import org.evgem.android.drachukeugenesapp.ui.base.AutoGeneratedRecyclerAdapter
import org.evgem.android.drachukeugenesapp.util.getRandomColor

class LauncherRecyclerAdapter(itemCount: Int) : RecyclerView.Adapter<LauncherRecyclerViewHolder>() {
    private val colors = ArrayList<Int>()
    init {
        for (i in 1..itemCount) {
            colors.add(getRandomColor())
        }
    }

    fun insert(pos: Int) {
        colors.add(pos, getRandomColor())
        notifyItemInserted(pos)
    }

    fun delete(pos: Int) {
        colors.removeAt(pos)
        notifyItemRemoved(pos)
    }

    override fun getItemCount(): Int = colors.size

    override fun onCreateViewHolder(container: ViewGroup, type: Int): LauncherRecyclerViewHolder {
        val view = LayoutInflater.from(container.context).inflate(R.layout.item_launcher_icon, container, false)
        return LauncherRecyclerViewHolder(view)
    }

    override fun onBindViewHolder(item: LauncherRecyclerViewHolder, pos: Int) {
        val color: Int = colors.getOrNull(pos) ?: {
            val color = getRandomColor()
            colors.add(pos, color)
            color
        }()
        item.bind(color, this)
    }
}